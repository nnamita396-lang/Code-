#include <stdio.h>
#include <stdlib.h>
#include <string.h>
// Structure for one day
typedef struct {
 char *dayName; // dynamically allocated string for day name
 int date; // integer for date
 char *activity; // dynamically allocated string for activity description
} Day;
int main() {
 int i;
 // Allocate memory for 7 days (week)
 Day *calendar = (Day *)malloc(7 * sizeof(Day));
 if (calendar == NULL) {
 printf("Memory allocation failed!\n");
 return 1;
 }
 // Predefined day names
 const char *dayNames[7] = {
 "Monday", "Tuesday", "Wednesday", "Thursday", 
 "Friday", "Saturday", "Sunday"
 };
 // Fill calendar with sample data
 for (i = 0; i < 7; i++) {
 // Allocate memory and copy day name
 calendar[i].dayName = (char *)malloc(strlen(dayNames[i]) + 1);
 strcpy(calendar[i].dayName, dayNames[i]);
 // Assign date (for demo: just i+1)
 calendar[i].date = i + 1;
 // Allocate memory for activity description
 char tempActivity[50];
 sprintf(tempActivity, "Activity planned for %s", dayNames[i]);
 calendar[i].activity = (char *)malloc(strlen(tempActivity) + 1);
 strcpy(calendar[i].activity, tempActivity);
 }
 // Display the calendar
 printf("Weekly Calendar:\n");
 for (i = 0; i < 7; i++) {
 printf("%s (Date: %d): %s\n", calendar[i].dayName, calendar[i].date,
calendar[i].activity);
 }
 // Free allocated memory
 for (i = 0; i < 7; i++) {
 free(calendar[i].dayName);
 free(calendar[i].activity);
 }
 free(calendar);
 return 0;
}
